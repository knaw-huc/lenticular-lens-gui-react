/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as JobIdImport } from './routes/$jobId'
import { Route as IndexImport } from './routes/index'
import { Route as JobIdIndexImport } from './routes/$jobId/index'
import { Route as JobIdLensIndexImport } from './routes/$jobId/lens/index'
import { Route as JobIdDataSelectionIndexImport } from './routes/$jobId/data-selection/index'
import { Route as JobIdAlignmentIndexImport } from './routes/$jobId/alignment/index'
import { Route as JobIdLensIdImport } from './routes/$jobId/lens/$id'
import { Route as JobIdDataSelectionIdImport } from './routes/$jobId/data-selection/$id'
import { Route as JobIdAlignmentIdImport } from './routes/$jobId/alignment/$id'

// Create/Update Routes

const JobIdRoute = JobIdImport.update({
  path: '/$jobId',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const JobIdIndexRoute = JobIdIndexImport.update({
  path: '/',
  getParentRoute: () => JobIdRoute,
} as any)

const JobIdLensIndexRoute = JobIdLensIndexImport.update({
  path: '/lens/',
  getParentRoute: () => JobIdRoute,
} as any)

const JobIdDataSelectionIndexRoute = JobIdDataSelectionIndexImport.update({
  path: '/data-selection/',
  getParentRoute: () => JobIdRoute,
} as any)

const JobIdAlignmentIndexRoute = JobIdAlignmentIndexImport.update({
  path: '/alignment/',
  getParentRoute: () => JobIdRoute,
} as any)

const JobIdLensIdRoute = JobIdLensIdImport.update({
  path: '/lens/$id',
  getParentRoute: () => JobIdRoute,
} as any)

const JobIdDataSelectionIdRoute = JobIdDataSelectionIdImport.update({
  path: '/data-selection/$id',
  getParentRoute: () => JobIdRoute,
} as any)

const JobIdAlignmentIdRoute = JobIdAlignmentIdImport.update({
  path: '/alignment/$id',
  getParentRoute: () => JobIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$jobId': {
      id: '/$jobId'
      path: '/$jobId'
      fullPath: '/$jobId'
      preLoaderRoute: typeof JobIdImport
      parentRoute: typeof rootRoute
    }
    '/$jobId/': {
      id: '/$jobId/'
      path: '/'
      fullPath: '/$jobId/'
      preLoaderRoute: typeof JobIdIndexImport
      parentRoute: typeof JobIdImport
    }
    '/$jobId/alignment/$id': {
      id: '/$jobId/alignment/$id'
      path: '/alignment/$id'
      fullPath: '/$jobId/alignment/$id'
      preLoaderRoute: typeof JobIdAlignmentIdImport
      parentRoute: typeof JobIdImport
    }
    '/$jobId/data-selection/$id': {
      id: '/$jobId/data-selection/$id'
      path: '/data-selection/$id'
      fullPath: '/$jobId/data-selection/$id'
      preLoaderRoute: typeof JobIdDataSelectionIdImport
      parentRoute: typeof JobIdImport
    }
    '/$jobId/lens/$id': {
      id: '/$jobId/lens/$id'
      path: '/lens/$id'
      fullPath: '/$jobId/lens/$id'
      preLoaderRoute: typeof JobIdLensIdImport
      parentRoute: typeof JobIdImport
    }
    '/$jobId/alignment/': {
      id: '/$jobId/alignment/'
      path: '/alignment'
      fullPath: '/$jobId/alignment'
      preLoaderRoute: typeof JobIdAlignmentIndexImport
      parentRoute: typeof JobIdImport
    }
    '/$jobId/data-selection/': {
      id: '/$jobId/data-selection/'
      path: '/data-selection'
      fullPath: '/$jobId/data-selection'
      preLoaderRoute: typeof JobIdDataSelectionIndexImport
      parentRoute: typeof JobIdImport
    }
    '/$jobId/lens/': {
      id: '/$jobId/lens/'
      path: '/lens'
      fullPath: '/$jobId/lens'
      preLoaderRoute: typeof JobIdLensIndexImport
      parentRoute: typeof JobIdImport
    }
  }
}

// Create and export the route tree

interface JobIdRouteChildren {
  JobIdIndexRoute: typeof JobIdIndexRoute
  JobIdAlignmentIdRoute: typeof JobIdAlignmentIdRoute
  JobIdDataSelectionIdRoute: typeof JobIdDataSelectionIdRoute
  JobIdLensIdRoute: typeof JobIdLensIdRoute
  JobIdAlignmentIndexRoute: typeof JobIdAlignmentIndexRoute
  JobIdDataSelectionIndexRoute: typeof JobIdDataSelectionIndexRoute
  JobIdLensIndexRoute: typeof JobIdLensIndexRoute
}

const JobIdRouteChildren: JobIdRouteChildren = {
  JobIdIndexRoute: JobIdIndexRoute,
  JobIdAlignmentIdRoute: JobIdAlignmentIdRoute,
  JobIdDataSelectionIdRoute: JobIdDataSelectionIdRoute,
  JobIdLensIdRoute: JobIdLensIdRoute,
  JobIdAlignmentIndexRoute: JobIdAlignmentIndexRoute,
  JobIdDataSelectionIndexRoute: JobIdDataSelectionIndexRoute,
  JobIdLensIndexRoute: JobIdLensIndexRoute,
}

const JobIdRouteWithChildren = JobIdRoute._addFileChildren(JobIdRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$jobId': typeof JobIdRouteWithChildren
  '/$jobId/': typeof JobIdIndexRoute
  '/$jobId/alignment/$id': typeof JobIdAlignmentIdRoute
  '/$jobId/data-selection/$id': typeof JobIdDataSelectionIdRoute
  '/$jobId/lens/$id': typeof JobIdLensIdRoute
  '/$jobId/alignment': typeof JobIdAlignmentIndexRoute
  '/$jobId/data-selection': typeof JobIdDataSelectionIndexRoute
  '/$jobId/lens': typeof JobIdLensIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$jobId': typeof JobIdIndexRoute
  '/$jobId/alignment/$id': typeof JobIdAlignmentIdRoute
  '/$jobId/data-selection/$id': typeof JobIdDataSelectionIdRoute
  '/$jobId/lens/$id': typeof JobIdLensIdRoute
  '/$jobId/alignment': typeof JobIdAlignmentIndexRoute
  '/$jobId/data-selection': typeof JobIdDataSelectionIndexRoute
  '/$jobId/lens': typeof JobIdLensIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$jobId': typeof JobIdRouteWithChildren
  '/$jobId/': typeof JobIdIndexRoute
  '/$jobId/alignment/$id': typeof JobIdAlignmentIdRoute
  '/$jobId/data-selection/$id': typeof JobIdDataSelectionIdRoute
  '/$jobId/lens/$id': typeof JobIdLensIdRoute
  '/$jobId/alignment/': typeof JobIdAlignmentIndexRoute
  '/$jobId/data-selection/': typeof JobIdDataSelectionIndexRoute
  '/$jobId/lens/': typeof JobIdLensIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$jobId'
    | '/$jobId/'
    | '/$jobId/alignment/$id'
    | '/$jobId/data-selection/$id'
    | '/$jobId/lens/$id'
    | '/$jobId/alignment'
    | '/$jobId/data-selection'
    | '/$jobId/lens'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$jobId'
    | '/$jobId/alignment/$id'
    | '/$jobId/data-selection/$id'
    | '/$jobId/lens/$id'
    | '/$jobId/alignment'
    | '/$jobId/data-selection'
    | '/$jobId/lens'
  id:
    | '__root__'
    | '/'
    | '/$jobId'
    | '/$jobId/'
    | '/$jobId/alignment/$id'
    | '/$jobId/data-selection/$id'
    | '/$jobId/lens/$id'
    | '/$jobId/alignment/'
    | '/$jobId/data-selection/'
    | '/$jobId/lens/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  JobIdRoute: typeof JobIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  JobIdRoute: JobIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$jobId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$jobId": {
      "filePath": "$jobId.tsx",
      "children": [
        "/$jobId/",
        "/$jobId/alignment/$id",
        "/$jobId/data-selection/$id",
        "/$jobId/lens/$id",
        "/$jobId/alignment/",
        "/$jobId/data-selection/",
        "/$jobId/lens/"
      ]
    },
    "/$jobId/": {
      "filePath": "$jobId/index.tsx",
      "parent": "/$jobId"
    },
    "/$jobId/alignment/$id": {
      "filePath": "$jobId/alignment/$id.tsx",
      "parent": "/$jobId"
    },
    "/$jobId/data-selection/$id": {
      "filePath": "$jobId/data-selection/$id.tsx",
      "parent": "/$jobId"
    },
    "/$jobId/lens/$id": {
      "filePath": "$jobId/lens/$id.tsx",
      "parent": "/$jobId"
    },
    "/$jobId/alignment/": {
      "filePath": "$jobId/alignment/index.tsx",
      "parent": "/$jobId"
    },
    "/$jobId/data-selection/": {
      "filePath": "$jobId/data-selection/index.tsx",
      "parent": "/$jobId"
    },
    "/$jobId/lens/": {
      "filePath": "$jobId/lens/index.tsx",
      "parent": "/$jobId"
    }
  }
}
ROUTE_MANIFEST_END */
